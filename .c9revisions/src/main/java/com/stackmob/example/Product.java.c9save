{"ts":1365059332032,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.stackmob.example;\n \nimport com.stackmob.core.customcode.CustomCodeMethod;\nimport com.stackmob.core.rest.ProcessedAPIRequest;\nimport com.stackmob.core.rest.ResponseToProcess;\nimport com.stackmob.sdkapi.SDKServiceProvider;\n \nimport java.lang.Exception;\nimport java.lang.String;\nimport java.lang.StringBuilder;\nimport java.net.HttpURLConnection;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\n \nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n \npublic class Product implements CustomCodeMethod {\n \n  /**\n   * Name our custom code method\n   */\n  @Override\n  public String getMethodName() {\n    return \"update_product\";\n  }\n \n  /**\n   * Specify parameters for our custom code method\n   */\n  @Override\n  public List<String> getParams() {\n    return new ArrayList<String>() {{\n      //add(\"username\");\n      //add(\"score\");\n//      add(\"product\");\n    }};\n  }\n \n  @Override\n  public ResponseToProcess execute(ProcessedAPIRequest request, SDKServiceProvider serviceProvider) {\n    // this logger can be used to log any activity and you can view the log at https://dashboard.stackmob.com/data/logs\n    // LoggerService logger = serviceProvider.getLoggerService(SetHighScore.class);\n \n    Map<String, Object> map = new HashMap<String, Object>();\n    String verb = request.getVerb().toString();\n    String reqb=null;\n    JSONArray new_cats_ja=null;\n    String new_cats[] =null;\n    JSONArray new_statii_ja=null;\n    String new_statii[] =null;\n    JSONArray old_cats=null;\n    JSONArray old_statii=null;\n    HashSet all_cats_hs=null;\n    HashSet all_statii_hs=null;\n    String all_cats[]=null;\n \n    StringBuilder sb = new StringBuilder(verb + \" =>\");\n \n    // this is where we handle the special case for `POST` and `PUT` requests\n     if (!request.getBody().isEmpty()) {\n     \ttry{\n     \t\tJSONObject rb= new JSONObject(request.getBody());\n     \t \treqb = rb.toString();\n     \t \n     \t //here we collect all the categories and statii both in the new object\n       \t\tif (!rb.isNull(\"categories\")){\n           \t\t new_cats_ja= rb.getJSONArray(\"categories\");\n \t\t\t\tif(new_cats_ja.length()>0){\n\t\t\t\t\tnew_cats = new String[new_cats_ja.length()];\n\t\t\t\t\tfor(int i=0;i<new_cats_ja.length();i++){\n\t\t\t\t\t\tnew_cats[i] = new_cats_ja.getString(i);//\n\t\t\t\t//all_cats_hs.add(new_cats_ja.getString(i));\n\t\t\t\t\t}\t\n\t\t\t//all_cats=all_cats_hs.toArray();\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n           \t\t}\n       \t\t}\n      \t\tif (!rb.isNull(\"statii\")){\n           \t\tnew_statii_ja= rb.getJSONArray(\"statii\");\n           \t\tif(new_statii_ja.length()>0){\n           \t\t\tnew_statii = new String[new_statii_ja.length()];\n\t\t\t\t\tfor(int i=0;i<new_statii_ja.length();i++){\n\t\t\t\t\t\tnew_statii[i] = new_statii_ja.getString(i);\n\t\t\t\t\t\t//all_statii_hs.add(new_statii_ja.getString(i));\n\t\t\t\t\t}\n         \t\t}\n           //all_statii=all_statii_hs.toArray();\n           }\n    \t\tif (verb.equalsIgnoreCase(\"post\")){\n     //increment all    \n     \t\t\tDataService dataService = serviceProvider.getDataService();   // get the StackMob datastore service and assemble the query\n\n     \t\t\tif(new_cats.length>0){\n     \t\t\t\t//update cat\n     \t\t\t\t try {\n      List<SMUpdate> update = new ArrayList<SMUpdate>();\n      update.add(new SMIncrement(\"num_likes\", intNumber));\n      SMObject incrementResult = dataService.updateObject(\"todo\", \"todo1\", update); // todo schema with todo_id = todo1\n      responseBody = incrementResult.toString();\n    } catch (InvalidSchemaException e) {\n      HashMap<String, String> errMap = new HashMap<String, String>();\n      errMap.put(\"error\", \"invalid_schema\");\n      errMap.put(\"detail\", e.toString());\n      return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n    } catch (DatastoreException e) {\n      HashMap<String, String> errMap = new HashMap<String, String>();\n      errMap.put(\"error\", \"datastore_exception\");\n      errMap.put(\"detail\", e.toString());\n      return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n    } catch(Exception e) {\n      HashMap<String, String> errMap = new HashMap<String, String>();\n      errMap.put(\"error\", \"unknown\");\n      errMap.put(\"detail\", e.toString());\n      return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n    }\n     \t\t\t}\n    \t\t}\n    \t\tif (verb.equalsIgnoreCase(\"put\")){\n     //get all values in new + existing versions and then compare\n    \t\t}\n    \t\tif (verb.equalsIgnoreCase(\"delete\")){\n     //decrement all\n    \t\t}\n    \t\n    \t}\n    \tcatch(JSONException e){\n          sb.append(\"Caught JSON Exception\");\n          e.printStackTrace();\n    \t}\n     } else sb.append(\"Request body is empty\");\n    /*if (verb.equalsIgnoreCase(\"post\") || verb.equalsIgnoreCase(\"put\")) {\n \n      if (!request.getBody().isEmpty()) {\n        try {\n          JSONObject jsonObj = new JSONObject(request.getBody());\n          if (!jsonObj.isNull(\"username\")) sb.append(\" --username: \" + jsonObj.getString(\"username\"));\n          if (!jsonObj.isNull(\"score\")) sb.append(\" --score: \" + jsonObj.getString(\"score\"));\n        } catch (JSONException e) {\n          sb.append(\"Caught JSON Exception\");\n          e.printStackTrace();\n        }\n      } else sb.append(\"Request body is empty\");*/\n     \n    // this is where we handle the case for `GET` and `DELETE` requests\n    //} else sb.append( String.format(\"username: %s | score: %s\", request.getParams().get(\"username\"), request.getParams().get(\"score\")) );\n \n    map.put(\"message\", sb.toString());\n    map.put(\"verb\", verb);\n    map.put(\"reqbody\",reqb);\n    return new ResponseToProcess(HttpURLConnection.HTTP_OK, map);\n  }\n \n}\n"]],"start1":0,"start2":0,"length1":0,"length2":5743}]],"length":5743}
{"contributors":[],"silentsave":false,"ts":1365059797431,"patch":[[{"diffs":[[0,"    "],[-1,"\t\t\t\t"],[1,"               for(int i=0;i<new_cats.length;i++){\n         \t\t\t   "],[0," try"],[-1," "],[0,"{\n"],[1,"                          "],[0,"    "]],"start1":3167,"start2":3167,"length1":19,"length2":106},{"diffs":[[0,"MUpdate>();\n"],[1,"                          "],[0,"      update"]],"start1":3314,"start2":3314,"length1":24,"length2":50},{"diffs":[[0,"nt(\""],[-1,"num_likes\", intNumber));\n"],[1,"count\", 1));\n                          "],[0,"    "]],"start1":3382,"start2":3382,"length1":33,"length2":47},{"diffs":[[0,"Object(\""],[-1,"todo"],[1,"category"],[0,"\", \"todo"]],"start1":3476,"start2":3476,"length1":20,"length2":24},{"diffs":[[0,"= todo1\n"],[1,"                          "],[0,"      re"]],"start1":3541,"start2":3541,"length1":16,"length2":42},{"diffs":[[0,"toString();\n"],[1,"                        "],[0,"    } catch "]],"start1":3612,"start2":3612,"length1":24,"length2":48},{"diffs":[[0,"aException e) {\n"],[1,"                          "],[0,"      HashMap<St"]],"start1":3673,"start2":3673,"length1":32,"length2":58},{"diffs":[[0,"ing, String>();\n"],[1,"                          "],[0,"      errMap.put"]],"start1":3769,"start2":3769,"length1":32,"length2":58},{"diffs":[[0,"d_schema\");\n"],[1,"                          "],[0,"      errMap"]],"start1":3844,"start2":3844,"length1":24,"length2":50},{"diffs":[[0," e.toString());\n"],[1,"                          "],[0,"      return new"]],"start1":3908,"start2":3908,"length1":32,"length2":58},{"diffs":[[0,"al server error\n"],[1,"                        "],[0,"    } catch (Dat"]],"start1":4053,"start2":4053,"length1":32,"length2":56},{"diffs":[[0,"eException e) {\n"],[1,"                          "],[0,"      HashMap<St"]],"start1":4114,"start2":4114,"length1":32,"length2":58},{"diffs":[[0,"ing, String>();\n"],[1,"                          "],[0,"      errMap.put"]],"start1":4210,"start2":4210,"length1":32,"length2":58},{"diffs":[[0,"xception\");\n"],[1,"                          "],[0,"      errMap"]],"start1":4290,"start2":4290,"length1":24,"length2":50},{"diffs":[[0," e.toString());\n"],[1,"                          "],[0,"      return new"]],"start1":4354,"start2":4354,"length1":32,"length2":58},{"diffs":[[0,"    "],[-1,"} catch(Exception e) {\n"],[1,"                        } catch(Exception e) {\n                          "],[0,"    "]],"start1":4515,"start2":4515,"length1":31,"length2":81},{"diffs":[[0," String>();\n"],[1,"                          "],[0,"      errMap"]],"start1":4650,"start2":4650,"length1":24,"length2":50},{"diffs":[[0,"\"unknown\");\n"],[1,"                          "],[0,"      errMap"]],"start1":4714,"start2":4714,"length1":24,"length2":50},{"diffs":[[0,"oString());\n"],[1,"                          "],[0,"      return"]],"start1":4782,"start2":4782,"length1":24,"length2":50},{"diffs":[[0,"erver error\n"],[1,"                            }\n                "],[0,"    }\n     \t"]],"start1":4927,"start2":4927,"length1":24,"length2":70}]],"length":6330,"saved":false}
{"ts":1365062879856,"patch":[[{"diffs":[[0,"ry\","],[-1," \"todo1\""],[1,"new_cats[i]"],[0,", up"]],"start1":3490,"start2":3490,"length1":16,"length2":19}]],"length":6333,"saved":false}
{"ts":1365063051172,"patch":[[{"diffs":[[0,"}\n     \t\t\t}\n"],[1,"                 //\n"],[0,"    \t\t}\n    "]],"start1":4992,"start2":4992,"length1":24,"length2":44}]],"length":6353,"saved":false}
{"ts":1365063059545,"patch":[[{"diffs":[[0,"      //"],[1,"save"],[0,"\n    \t\t}"]],"start1":5015,"start2":5015,"length1":16,"length2":20}]],"length":6357,"saved":false}
{"ts":1365063060057,"patch":[[{"diffs":[[0,"  //save"],[1," "],[0,"\n    \t\t}"]],"start1":5019,"start2":5019,"length1":16,"length2":17}]],"length":6358,"saved":false}
{"ts":1365063061584,"patch":[[{"diffs":[[0," //save "],[1,"item"],[0,"\n    \t\t}"]],"start1":5020,"start2":5020,"length1":16,"length2":20}]],"length":6362,"saved":false}
{"ts":1365063122752,"patch":[[{"diffs":[[0,"}\n     \t\t\t}\n"],[1,"                 \n"],[0,"            "]],"start1":4992,"start2":4992,"length1":24,"length2":42}]],"length":6380,"saved":false}
{"ts":1365063123978,"patch":[[{"diffs":[[0,"            "],[1,"if(new_cats.length>0){\n         \t\t\t//update cat\n                    for(int i=0;i<new_cats.length;i++){\n         \t\t\t    try{\n                                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                                update.add(new SMIncrement(\"count\", 1));\n                                SMObject incrementResult = dataService.updateObject(\"category\",new_cats[i], update); // todo schema with todo_id = todo1\n                                responseBody = incrementResult.toString();\n                            } catch (InvalidSchemaException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"invalid_schema\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch (DatastoreException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"datastore_exception\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch(Exception e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"unknown\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            }\n                    }\n     \t\t\t}"],[0,"\n           "]],"start1":5009,"start2":5009,"length1":24,"length2":1909}]],"length":8265,"saved":false}
{"ts":1365063127572,"patch":[[{"diffs":[[0,"     if(new_"],[1,"stati"],[0,"cats.length>"]],"start1":5016,"start2":5016,"length1":24,"length2":29}]],"length":8270,"saved":false}
{"ts":1365063128595,"patch":[[{"diffs":[[0,"ew_stati"],[1,"i"],[0,"cats.len"]],"start1":5025,"start2":5025,"length1":16,"length2":17}]],"length":8271,"saved":false}
{"ts":1365063131189,"patch":[[{"diffs":[[0,"w_statii"],[-1,"cats"],[0,".length>"]],"start1":5026,"start2":5026,"length1":20,"length2":16}]],"length":8267,"saved":false}
{"ts":1365063139439,"patch":[[{"diffs":[[0,"r(int i=0;i<new_"],[1,"s"],[0,"cats.length;i++)"]],"start1":5093,"start2":5093,"length1":32,"length2":33}]],"length":8268,"saved":false}
{"ts":1365063141434,"patch":[[{"diffs":[[0,";i<new_s"],[-1,"c"],[1,"tatii"],[0,"ats.leng"]],"start1":5102,"start2":5102,"length1":17,"length2":21}]],"length":8272,"saved":false}
{"ts":1365063144586,"patch":[[{"diffs":[[0,"w_statii"],[-1,"ats"],[0,".length;"]],"start1":5107,"start2":5107,"length1":19,"length2":16}]],"length":8269,"saved":false}
{"ts":1365063153081,"patch":[[{"diffs":[[0,"(\"category\",new_"],[1,"statii"],[0,"cats[i], update)"]],"start1":5389,"start2":5389,"length1":32,"length2":38}]],"length":8275,"saved":false}
{"ts":1365063164009,"patch":[[{"diffs":[[0,"w_statii"],[-1,"cats"],[0,"[i], upd"]],"start1":5403,"start2":5403,"length1":20,"length2":16}]],"length":8271,"saved":false}
{"ts":1365063604576,"patch":[[{"diffs":[[0,"is empty\");\n"],[1,"     \n"],[0,"    /*if (ve"]],"start1":7300,"start2":7300,"length1":24,"length2":30}]],"length":8277,"saved":false}
{"ts":1365063605963,"patch":[[{"diffs":[[0,"mpty\");\n    "],[-1," "],[0,"\n    /*if (v"]],"start1":7304,"start2":7304,"length1":25,"length2":24}]],"length":8276,"saved":false}
{"ts":1365063608455,"patch":[[{"diffs":[[0,"mpty\");\n    "],[1,"void"],[0,"\n    /*if (v"]],"start1":7304,"start2":7304,"length1":24,"length2":28}]],"length":8280,"saved":false}
{"ts":1365063615826,"patch":[[{"diffs":[[0,"    void"],[1," incremen"],[0,"\n    /*i"]],"start1":7312,"start2":7312,"length1":16,"length2":25}]],"length":8289,"saved":false}
{"ts":1365063618867,"patch":[[{"diffs":[[0,"incremen"],[1,"t"],[0,"\n    /*i"]],"start1":7321,"start2":7321,"length1":16,"length2":17}]],"length":8290,"saved":false}
{"ts":1365063620599,"patch":[[{"diffs":[[0,"ncrement"],[1,"All"],[0,"\n    /*i"]],"start1":7322,"start2":7322,"length1":16,"length2":19}]],"length":8293,"saved":false}
{"ts":1365063622300,"patch":[[{"diffs":[[0,"ementAll"],[1,"()"],[0,"\n    /*i"]],"start1":7325,"start2":7325,"length1":16,"length2":18}]],"length":8295,"saved":false}
{"ts":1365063624245,"patch":[[{"diffs":[[0,"mentAll("],[1,"int"],[0,")\n    /*"]],"start1":7326,"start2":7326,"length1":16,"length2":19}]],"length":8298,"saved":false}
{"ts":1365063626787,"patch":[[{"diffs":[[0,"tAll(int"],[1," "],[0,")\n    /*"]],"start1":7329,"start2":7329,"length1":16,"length2":17}]],"length":8299,"saved":false}
{"ts":1365063628667,"patch":[[{"diffs":[[0,"All(int "],[1,"x"],[0,")\n    /*"]],"start1":7330,"start2":7330,"length1":16,"length2":17}]],"length":8300,"saved":false}
{"ts":1365063631127,"patch":[[{"diffs":[[0,"l(int x)"],[1,"{}"],[0,"\n    /*i"]],"start1":7332,"start2":7332,"length1":16,"length2":18}]],"length":8302,"saved":false}
{"ts":1365063632358,"patch":[[{"diffs":[[0,"(int x){"],[1,"\n        \n    "],[0,"}\n    /*"]],"start1":7333,"start2":7333,"length1":16,"length2":30}]],"length":8316,"saved":false}
{"ts":1365063634455,"patch":[[{"diffs":[[0,"x){\n        "],[1,"DataService dataService = serviceProvider.getDataService();   // get the StackMob datastore service and assemble the query\n\n         \t\tif(new_cats.length>0){\n     \t\t\t\t//update cat\n                    for(int i=0;i<new_cats.length;i++){\n         \t\t\t    try{\n                                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                                update.add(new SMIncrement(\"count\", 1));\n                                SMObject incrementResult = dataService.updateObject(\"category\",new_cats[i], update); // todo schema with todo_id = todo1\n                                responseBody = incrementResult.toString();\n                            } catch (InvalidSchemaException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"invalid_schema\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch (DatastoreException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"datastore_exception\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch(Exception e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"unknown\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            }\n                    }\n     \t\t\t}\n                 if(new_statii.length>0){\n         \t\t\t//update cat\n                    for(int i=0;i<new_statii.length;i++){\n         \t\t\t    try{\n                                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                                update.add(new SMIncrement(\"count\", 1));\n                                SMObject incrementResult = dataService.updateObject(\"category\",new_statii[i], update); // todo schema with todo_id = todo1\n                                responseBody = incrementResult.toString();\n                            } catch (InvalidSchemaException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"invalid_schema\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch (DatastoreException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"datastore_exception\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch(Exception e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"unknown\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            }\n                    }\n     \t\t\t}"],[0,"\n    }\n    /"]],"start1":7338,"start2":7338,"length1":24,"length2":3950}]],"length":12242,"saved":false}
{"ts":1365063642742,"patch":[[{"diffs":[[0,"rement(\"count\", "],[-1,"1"],[0,"));\n            "]],"start1":9649,"start2":9649,"length1":33,"length2":32}]],"length":12241,"saved":false}
{"ts":1365063647929,"patch":[[{"diffs":[[0,"count\", "],[1,"x"],[0,"));\n    "]],"start1":9657,"start2":9657,"length1":16,"length2":17}]],"length":12242,"saved":false}
{"ts":1365063676595,"patch":[[{"diffs":[[0,"rement(\"count\", "],[-1,"1"],[0,"));\n            "]],"start1":7742,"start2":7742,"length1":33,"length2":32}]],"length":12241,"saved":false}
{"ts":1365063681073,"patch":[[{"diffs":[[0,"count\", "],[1,"xx"],[0,"));\n    "]],"start1":7750,"start2":7750,"length1":16,"length2":18}]],"length":12243,"saved":false}
{"ts":1365063682121,"patch":[[{"diffs":[[0,"count\", "],[-1,"x"],[0,"x));\n   "]],"start1":7750,"start2":7750,"length1":17,"length2":16}]],"length":12242,"saved":false}
{"ts":1365064949549,"patch":[[{"diffs":[[0,"l(int x)"],[1," throw"],[0,"{\n      "]],"start1":7332,"start2":7332,"length1":16,"length2":22}]],"length":12248,"saved":false}
{"ts":1365064951146,"patch":[[{"diffs":[[0,"x) throw"],[1,"s "],[0,"{\n      "]],"start1":7338,"start2":7338,"length1":16,"length2":18}]],"length":12250,"saved":false}
{"ts":1365065836794,"patch":[[{"diffs":[[0,") throws"],[1," InvalidSchemaException,"],[0," {\n     "]],"start1":7339,"start2":7339,"length1":16,"length2":40}]],"length":12274,"saved":false}
{"ts":1365065852264,"patch":[[{"diffs":[[0,"ception,"],[1,"DatastoreException"],[0," {\n     "]],"start1":7363,"start2":7363,"length1":16,"length2":34}]],"length":12292,"saved":false}
{"ts":1365065860083,"patch":[[{"diffs":[[0,"xception"],[1,",Exception"],[0," {\n     "]],"start1":7381,"start2":7381,"length1":16,"length2":26}]],"length":12302,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365070430587,"patch":[[{"diffs":[[0,"core\");\n"],[-1,"//"],[0,"      ad"]],"start1":937,"start2":937,"length1":18,"length2":16},{"diffs":[[0,"   add(\""],[-1,"product"],[1,"category_id"],[0,"\");\n    "]],"start1":948,"start2":948,"length1":23,"length2":27},{"diffs":[[0,"old_cats"],[-1,"=null"],[1,""],[0,";\n    JS"]],"start1":1576,"start2":1576,"length1":21,"length2":16},{"diffs":[[0,"equests\n    "],[-1," "],[1,""],[0,"if (!request"]],"start1":1837,"start2":1837,"length1":25,"length2":24},{"diffs":[[0,"    "],[-1,"\t\t\tDataService dataService = serviceProvider.getDataService();   // get the StackMob datastore service and assemble the query\n\n     \t\t\tif(new_cats.length>0){\n     \t\t\t\t//update cat\n                    for(int i=0;i<new_cats.length;i++){\n        "],[1,"           new_cats= new String[]({});\n"],[0," \t\t\t"]],"start1":2978,"start2":2978,"length1":252,"length2":47},{"diffs":[[0,"    "],[-1,"            List<SMUpdate> update = new ArrayList<SMUpdate>();\n                                update.add(new SMIncrement(\"count\", 1));\n                                SMObject incrementResult = dataService.updateObject(\"category\",new_cats[i], update); // todo schema with todo_id = todo1\n                                responseBody = incrementResult.toString();\n    "],[1,"\n                    incrementAll(1);\n \t\t\t    }\n"],[0,"    "]],"start1":3050,"start2":3050,"length1":376,"length2":56},{"diffs":[[0,"            "],[-1,"         }"],[0," catch (Inva"]],"start1":3105,"start2":3105,"length1":34,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"HashMap<Stri"]],"start1":3161,"start2":3161,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":3245,"start2":3245,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":3304,"start2":3304,"length1":36,"length2":24},{"diffs":[[0,"oString());\n"],[-1,"            "],[0,"            "]],"start1":3340,"start2":3340,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"} catch (Dat"]],"start1":3489,"start2":3489,"length1":36,"length2":24},{"diffs":[[0,"eption e) {\n"],[-1,"            "],[0,"            "]],"start1":3522,"start2":3522,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":3626,"start2":3626,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":3690,"start2":3690,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"return new R"]],"start1":3746,"start2":3746,"length1":36,"length2":24},{"diffs":[[0,"erver error\n"],[-1,"            "],[0,"            "]],"start1":3859,"start2":3859,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"HashMap<Stri"]],"start1":3918,"start2":3918,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":4002,"start2":4002,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":4054,"start2":4054,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"return new R"]],"start1":4110,"start2":4110,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"}\n          "]],"start1":4239,"start2":4239,"length1":36,"length2":24},{"diffs":[[0,"    "],[-1,"   }"],[1,"//save item"],[0,"\n    "],[-1," \t"],[0,"\t\t}\n    "],[-1,"             if(new_statii.length>0){\n         \t\t\t//update cat\n                    for(int i=0;i<new_statii.length;i++){\n         \t\t\t    try{\n                                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                                update.add(new SMIncrement(\"count\", 1));"],[1,"\t\tif (verb.equalsIgnoreCase(\"put\")){\n     //get all values in new + existing versions and then compare\n    \t\t}\n    \t\tif (verb.equalsIgnoreCase(\"delete\")){"],[0,"\n     "],[-1,"                           SMObject incrementResult = dataService.updateObject(\"category\",new_statii[i], update); // todo schema with todo_id = todo1\n                                responseBody = incrementResult.toString("],[1,"//decrement all\n                 try{\n                    incrementAll(-1"],[0,");\n     "],[-1,"    "],[1,"\t\t"],[0,"    "],[1,"}\n"],[0,"    "]],"start1":4266,"start2":4266,"length1":568,"length2":281},{"diffs":[[0,"\n               "],[-1,"}"],[0," catch (InvalidS"]],"start1":4542,"start2":4542,"length1":33,"length2":32},{"diffs":[[0,"            "],[-1,"            "],[0,"HashMap<Stri"]],"start1":4602,"start2":4602,"length1":36,"length2":24},{"diffs":[[0," String>();\n"],[-1,"            "],[0,"            "]],"start1":4666,"start2":4666,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":4745,"start2":4745,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"return new R"]],"start1":4801,"start2":4801,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"} catch (Dat"]],"start1":4930,"start2":4930,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"HashMap<Stri"]],"start1":4983,"start2":4983,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":5067,"start2":5067,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":5131,"start2":5131,"length1":36,"length2":24},{"diffs":[[0,"oString());\n"],[-1,"            "],[0,"            "]],"start1":5167,"start2":5167,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"} catch(Exce"]],"start1":5316,"start2":5316,"length1":36,"length2":24},{"diffs":[[0,"eption e) {\n"],[-1,"            "],[0,"            "]],"start1":5339,"start2":5339,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":5443,"start2":5443,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"errMap.put(\""]],"start1":5495,"start2":5495,"length1":36,"length2":24},{"diffs":[[0,"            "],[-1,"            "],[0,"return new R"]],"start1":5551,"start2":5551,"length1":36,"length2":24},{"diffs":[[0,"    "],[-1,"            }\n                    }\n     \t\t\t}\n                 //save item\n    \t\t}\n    \t\tif (verb.equalsIgnoreCase(\"put\")){\n     //get all values in new + existing versions and then compare\n    \t\t}\n    \t\tif (verb.equalsIgnoreCase(\"delete\")){\n     //decrement all"],[1,"}\n                 //save item"],[0,"\n   "]],"start1":5688,"start2":5688,"length1":270,"length2":38},{"diffs":[[0,"\n    \t}\n    "],[-1," "],[1,""],[0,"} else sb.ap"]],"start1":5849,"start2":5849,"length1":25,"length2":24},{"diffs":[[0,"e query\n"],[-1,"\n        "],[0," \t\tif(ne"]],"start1":6117,"start2":6117,"length1":25,"length2":16},{"diffs":[[0,"\tif(new_cats"],[1,"!=null&&new_cats"],[0,".length>0){\n"]],"start1":6127,"start2":6127,"length1":24,"length2":40},{"diffs":[[0,"th>0){\n "],[-1,"    \t"],[0,"\t\t\t//upd"]],"start1":6160,"start2":6160,"length1":21,"length2":16},{"diffs":[[0,"/update cat\n"],[-1,"        "],[0,"            "]],"start1":6172,"start2":6172,"length1":32,"length2":24},{"diffs":[[0,"+){\n"],[-1,"         \t\t\t    try{\n                "],[0,"    "]],"start1":6228,"start2":6228,"length1":45,"length2":8},{"diffs":[[0,"ate>();\n"],[-1,"                "],[0,"        "]],"start1":6291,"start2":6291,"length1":32,"length2":16},{"diffs":[[0,"        "],[-1,"                "],[0,"SMObject"]],"start1":6364,"start2":6364,"length1":32,"length2":16},{"diffs":[[0,"= todo1\n"],[-1,"                "],[0,"        "]],"start1":6485,"start2":6485,"length1":32,"length2":16},{"diffs":[[0,"    "],[-1,"                } catch (InvalidSchemaException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"invalid_schema\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch (DatastoreException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"datastore_exception\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch(Exception e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"unknown\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            }\n                    }\n     \t\t\t}\n                 if("],[1,"}\n \t\t}\n        if(new_statii!=null&&"],[0,"new_"]],"start1":6560,"start2":6560,"length1":1393,"length2":44},{"diffs":[[0,"gth>0){\n"],[-1,"        "],[0," \t\t\t//up"]],"start1":6614,"start2":6614,"length1":24,"length2":16},{"diffs":[[0,"){\n \t\t\t//update "],[-1,"cat\n "],[1,"statii\n"],[0,"                "]],"start1":6619,"start2":6619,"length1":37,"length2":39},{"diffs":[[0,"            "],[-1,"       "],[0,"for(int i=0;"]],"start1":6642,"start2":6642,"length1":31,"length2":24},{"diffs":[[0,"+){\n"],[-1,"         \t\t\t    try{\n                "],[0,"    "]],"start1":6688,"start2":6688,"length1":45,"length2":8},{"diffs":[[0,"        "],[-1,"                "],[0,"update.a"]],"start1":6767,"start2":6767,"length1":32,"length2":16},{"diffs":[[0,"        "],[-1,"                "],[0,"SMObject"]],"start1":6824,"start2":6824,"length1":32,"length2":16},{"diffs":[[0,"= todo1\n"],[-1,"                "],[0,"        "]],"start1":6947,"start2":6947,"length1":32,"length2":16},{"diffs":[[0,"    "],[-1,"                } catch (InvalidSchemaException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"invalid_schema\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch (DatastoreException e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"datastore_exception\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            } catch(Exception e) {\n                                HashMap<String, String> errMap = new HashMap<String, String>();\n                                errMap.put(\"error\", \"unknown\");\n                                errMap.put(\"detail\", e.toString());\n                                return new ResponseToProcess(HttpURLConnection.HTTP_INTERNAL_ERROR, errMap); // http 500 - internal server error\n                            }\n                    }\n     \t"],[1,"}\n "],[0,"\t\t}\n"]],"start1":7022,"start2":7022,"length1":1369,"length2":11}]],"length":7998,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365083380438,"patch":[[{"diffs":[[0,"new_cats[] ="],[-1,"null"],[0,";\n    JSONAr"]],"start1":1479,"start2":1479,"length1":28,"length2":24}]],"length":7994,"saved":false}
{"ts":1365083385523,"patch":[[{"diffs":[[0,"w_cats[]"],[-1," ="],[0,";\n    JS"]],"start1":1481,"start2":1481,"length1":18,"length2":16}]],"length":7992,"saved":false}
{"ts":1365083451734,"patch":[[{"diffs":[[0,"new_cats"],[1," "],[0,"= new St"]],"start1":2987,"start2":2987,"length1":16,"length2":17}]],"length":7993,"saved":false}
{"ts":1365084728838,"patch":[[{"diffs":[[0,"ng[]"],[-1,"({});"],[0,"\n \t\t"]],"start1":3006,"start2":3006,"length1":13,"length2":8}]],"length":7988,"saved":false}
{"ts":1365084730693,"patch":[[{"diffs":[[0,"String[]"],[1,";"],[0,"\n \t\t\t   "]],"start1":3002,"start2":3002,"length1":16,"length2":17}]],"length":7989,"saved":false}
{"ts":1365084751626,"patch":[[{"diffs":[[0," String["],[1,"1"],[0,"];\n \t\t\t "]],"start1":3001,"start2":3001,"length1":16,"length2":17}]],"length":7990,"saved":false}
{"ts":1365084756601,"patch":[[{"diffs":[[0,"ing[1];\n"],[1,"                \n"],[0," \t\t\t    "]],"start1":3005,"start2":3005,"length1":16,"length2":33}]],"length":8007,"saved":false}
{"ts":1365084758768,"patch":[[{"diffs":[[0,"        "],[1,"ne"],[0,"\n \t\t\t   "]],"start1":3021,"start2":3021,"length1":16,"length2":18}]],"length":8009,"saved":false}
{"ts":1365084760148,"patch":[[{"diffs":[[0,"      ne"],[1,"w"],[0,"\n \t\t\t   "]],"start1":3023,"start2":3023,"length1":16,"length2":17}]],"length":8010,"saved":false}
{"ts":1365084761983,"patch":[[{"diffs":[[0,"     new"],[1,"_cats"],[0,"\n \t\t\t   "]],"start1":3024,"start2":3024,"length1":16,"length2":21}]],"length":8015,"saved":false}
{"ts":1365084769957,"patch":[[{"diffs":[[0,"new_cats"],[1,"[]"],[0,"\n \t\t\t   "]],"start1":3029,"start2":3029,"length1":16,"length2":18}]],"length":8017,"saved":false}
{"ts":1365084772879,"patch":[[{"diffs":[[0,"ew_cats["],[-1,"]"],[1,"1]="],[0,"\n \t\t\t   "]],"start1":3030,"start2":3030,"length1":17,"length2":19}]],"length":8019,"saved":false}
{"ts":1365106332905,"patch":[[{"diffs":[[0,"]=null;\n"],[1,"    String responseBody = \"\";\n"],[0," \n    St"]],"start1":1693,"start2":1693,"length1":16,"length2":46}]],"length":8049,"saved":false}
{"ts":1365106512408,"patch":[[{"diffs":[[0,")) );\n \n    "],[1,"//"],[0,"map.put(\"mes"]],"start1":7872,"start2":7872,"length1":24,"length2":26}]],"length":8051,"saved":false}
{"ts":1365106514858,"patch":[[{"diffs":[[0,"ing());\n    "],[1,"//"],[0,"map.put(\"ver"]],"start1":7913,"start2":7913,"length1":24,"length2":26}]],"length":8053,"saved":false}
{"ts":1365106516650,"patch":[[{"diffs":[[0,"b);\n    "],[1,"//"],[0,"map.put("]],"start1":7946,"start2":7946,"length1":16,"length2":18}]],"length":8055,"saved":false}
{"ts":1365106518505,"patch":[[{"diffs":[[0,"ody\",reqb);\n"],[1,"    map.put(\"response_body\", responseBody);\n"],[0,"    return n"]],"start1":7969,"start2":7969,"length1":24,"length2":68}]],"length":8099,"saved":false}
{"ts":1365106714345,"patch":[[{"diffs":[[0,"ing[1];\n"],[1,"                \n"],[0,"        "]],"start1":3035,"start2":3035,"length1":16,"length2":33}]],"length":8116,"saved":false}
{"ts":1365106716462,"patch":[[{"diffs":[[0,"                "],[1," if (!jsonObj.isNull(\"username\")) sb.append(\" --username: \" + jsonObj.getString(\"username\"));"],[0,"\n               "]],"start1":3043,"start2":3043,"length1":32,"length2":125}]],"length":8209,"saved":false}
{"ts":1365106733749,"patch":[[{"diffs":[[0,"ull(\"username\"))"],[1,"{"],[0," sb.append(\" --u"]],"start1":3076,"start2":3076,"length1":32,"length2":33}]],"length":8210,"saved":false}
{"ts":1365106737707,"patch":[[{"diffs":[[0,"cats[1]="],[1,"}"],[0,"\n \t\t\t   "]],"start1":3174,"start2":3174,"length1":16,"length2":17}]],"length":8211,"saved":false}
{"ts":1365106765036,"patch":[[{"diffs":[[0,"    "],[-1,"new_cats = new String[1];"],[0,"\n   "]],"start1":3013,"start2":3013,"length1":33,"length2":8}]],"length":8186,"saved":false}
{"ts":1365106766735,"patch":[[{"diffs":[[0,"g(\"username\"));\n"],[1,"                 \n"],[0,"                "]],"start1":3113,"start2":3113,"length1":32,"length2":50}]],"length":8204,"saved":false}
{"ts":1365106767921,"patch":[[{"diffs":[[0,"                "],[1,"new_cats = new String[1];"],[0,"\n               "]],"start1":3130,"start2":3130,"length1":32,"length2":57}]],"length":8229,"saved":false}
{"ts":1365106773386,"patch":[[{"diffs":[[0,"                "],[1,"   "],[0,"new_cats = new S"]],"start1":3130,"start2":3130,"length1":32,"length2":35}]],"length":8232,"saved":false}
{"ts":1365106777098,"patch":[[{"diffs":[[0,"                "],[1,"    "],[0,"new_cats[1]=}\n \t"]],"start1":3175,"start2":3175,"length1":32,"length2":36}]],"length":8236,"saved":false}
{"ts":1365106782443,"patch":[[{"diffs":[[0,"cats[1]="],[1,"\n                    "],[0,"}\n \t\t\t  "]],"start1":3199,"start2":3199,"length1":16,"length2":37}]],"length":8257,"saved":false}
{"ts":1365106791536,"patch":[[{"diffs":[[0,"ame\")){ "],[-1,"sb.append(\" --u"],[0,"sername:"]],"start1":3061,"start2":3061,"length1":31,"length2":16}]],"length":8242,"saved":false}
{"ts":1365106792550,"patch":[[{"diffs":[[0,"ame\")){ "],[-1,"ser"],[0,"name: \" "]],"start1":3061,"start2":3061,"length1":19,"length2":16}]],"length":8239,"saved":false}
{"ts":1365106796154,"patch":[[{"diffs":[[0,"ame\")){ "],[-1,"name: \" +"],[0," jsonObj"]],"start1":3061,"start2":3061,"length1":25,"length2":16}]],"length":8230,"saved":false}
{"ts":1365106801499,"patch":[[{"diffs":[[0,"ing(\"username\"))"],[-1,";"],[0,"\n               "]],"start1":3084,"start2":3084,"length1":33,"length2":32}]],"length":8229,"saved":false}
{"ts":1365106806757,"patch":[[{"diffs":[[0,"){  "],[-1,"jsonObj.getString(\"username\"))"],[0,"\n   "]],"start1":3066,"start2":3066,"length1":38,"length2":8}]],"length":8199,"saved":false}
{"ts":1365106808441,"patch":[[{"diffs":[[0,"cats[1]="],[1,"jsonObj.getString(\"username\"))"],[0,"\n       "]],"start1":3141,"start2":3141,"length1":16,"length2":46}]],"length":8229,"saved":false}
{"ts":1365106810554,"patch":[[{"diffs":[[0,"rname\"))"],[1,";"],[0,"\n       "]],"start1":3171,"start2":3171,"length1":16,"length2":17}]],"length":8230,"saved":false}
{"ts":1365106821233,"patch":[[{"diffs":[[0,"nObj.getString(\""],[1,"CATE"],[0,"username\"));\n   "]],"start1":3152,"start2":3152,"length1":32,"length2":36}]],"length":8234,"saved":false}
{"ts":1365106823402,"patch":[[{"diffs":[[0,"ng(\""],[-1,"CATE"],[0,"user"]],"start1":3164,"start2":3164,"length1":12,"length2":8}]],"length":8230,"saved":false}
{"ts":1365106825895,"patch":[[{"diffs":[[0,"nObj.getString(\""],[1,"catego"],[0,"username\"));\n   "]],"start1":3152,"start2":3152,"length1":32,"length2":38}]],"length":8236,"saved":false}
{"ts":1365106827078,"patch":[[{"diffs":[[0,"(\"catego"],[1,"ry"],[0,"username"]],"start1":3166,"start2":3166,"length1":16,"length2":18}]],"length":8238,"saved":false}
{"ts":1365106829915,"patch":[[{"diffs":[[0,"category"],[-1,"use"],[1,"_id"],[0,"rname\"))"]],"start1":3168,"start2":3168,"length1":19,"length2":19}]],"length":8238,"saved":false}
{"ts":1365106830550,"patch":[[{"diffs":[[0,"egory_id"],[-1,"rna"],[0,"me\"));\n "]],"start1":3171,"start2":3171,"length1":19,"length2":16}]],"length":8235,"saved":false}
{"ts":1365106831716,"patch":[[{"diffs":[[0,"egory_id"],[-1,"me"],[0,"\"));\n   "]],"start1":3171,"start2":3171,"length1":18,"length2":16}]],"length":8233,"saved":false}
{"ts":1365106837430,"patch":[[{"diffs":[[0,"isNull(\""],[-1,"username"],[1,"ca"],[0,"\")){  \n "]],"start1":3048,"start2":3048,"length1":24,"length2":18}]],"length":8227,"saved":false}
{"ts":1365106839647,"patch":[[{"diffs":[[0,"Null(\"ca"],[1,"tegory_"],[0,"\")){  \n "]],"start1":3050,"start2":3050,"length1":16,"length2":23}]],"length":8234,"saved":false}
{"ts":1365106841731,"patch":[[{"diffs":[[0,"ategory_"],[1,"id"],[0,"\")){  \n "]],"start1":3057,"start2":3057,"length1":16,"length2":18}]],"length":8236,"saved":false}
{"ts":1365107690906,"patch":[[{"diffs":[[0,"ption,Ex"],[-1,"ception"],[0," {\n     "]],"start1":6164,"start2":6164,"length1":23,"length2":16}]],"length":8229,"saved":false}
{"ts":1365107692756,"patch":[[{"diffs":[[0,"tion"],[-1,",Ex"],[0," {\n "]],"start1":6165,"start2":6165,"length1":11,"length2":8}]],"length":8226,"saved":false}
{"ts":1365107728567,"patch":[[{"diffs":[[0,".Exception;\n"],[1,"\n"],[0,"import java."]],"start1":251,"start2":251,"length1":24,"length2":25}]],"length":8227,"saved":false}
{"ts":1365107730407,"patch":[[{"diffs":[[0,"eption;\n"],[1,"import com.stackmob.core.InvalidSchemaException;\nimport com.stackmob.core.DatastoreException;"],[0,"\nimport "]],"start1":255,"start2":255,"length1":16,"length2":109}]],"length":8320,"saved":false}
{"ts":1365107923889,"patch":[[{"diffs":[[0,"is empty\");\n"],[1,"    \n"],[0,"    void inc"]],"start1":6174,"start2":6174,"length1":24,"length2":29}]],"length":8325,"saved":false}
{"ts":1365108121510,"patch":[[{"diffs":[[0,"mentAll("],[1,"String"],[0,"int x) t"]],"start1":6205,"start2":6205,"length1":16,"length2":22}]],"length":8331,"saved":false}
{"ts":1365108122480,"patch":[[{"diffs":[[0,"l(String"],[1,"["],[0,"int x) t"]],"start1":6211,"start2":6211,"length1":16,"length2":17}]],"length":8332,"saved":false}
{"ts":1365108124076,"patch":[[{"diffs":[[0,"(String["],[1,"]"],[0,"int x) t"]],"start1":6212,"start2":6212,"length1":16,"length2":17}]],"length":8333,"saved":false}
{"ts":1365108134781,"patch":[[{"diffs":[[0,"String[]"],[1," new"],[0,"int x) t"]],"start1":6213,"start2":6213,"length1":16,"length2":20}]],"length":8337,"saved":false}
{"ts":1365108136863,"patch":[[{"diffs":[[0,"ng[] new"],[1,"_cats"],[0,"int x) t"]],"start1":6217,"start2":6217,"length1":16,"length2":21}]],"length":8342,"saved":false}
{"ts":1365108139749,"patch":[[{"diffs":[[0,"new_cats"],[1,",S"],[0,"int x) t"]],"start1":6222,"start2":6222,"length1":16,"length2":18}]],"length":8344,"saved":false}
{"ts":1365108141477,"patch":[[{"diffs":[[0,"w_cats,S"],[1,"tring"],[0,"int x) t"]],"start1":6224,"start2":6224,"length1":16,"length2":21}]],"length":8349,"saved":false}
{"ts":1365108143294,"patch":[[{"diffs":[[0,"s,String"],[1,"[]"],[0,"int x) t"]],"start1":6229,"start2":6229,"length1":16,"length2":18}]],"length":8351,"saved":false}
{"ts":1365108146313,"patch":[[{"diffs":[[0,"String[]"],[1," new_"],[0,"int x) t"]],"start1":6231,"start2":6231,"length1":16,"length2":21}]],"length":8356,"saved":false}
{"ts":1365108149246,"patch":[[{"diffs":[[0,"g[] new_"],[1,"statii"],[0,"int x) t"]],"start1":6236,"start2":6236,"length1":16,"length2":22}]],"length":8362,"saved":false}
{"ts":1365108361948,"patch":[[{"diffs":[[0,"w_statii"],[1,","],[0,"int x) t"]],"start1":6242,"start2":6242,"length1":16,"length2":17}]],"length":8363,"saved":false}
{"ts":1365108561060,"patch":[[{"diffs":[[0,"ii,int x"],[1,","],[0,") throws"]],"start1":6248,"start2":6248,"length1":16,"length2":17}]],"length":8364,"saved":false}
{"ts":1365108564006,"patch":[[{"diffs":[[0,"i,int x,"],[1,"String"],[0,") throws"]],"start1":6249,"start2":6249,"length1":16,"length2":22}]],"length":8370,"saved":false}
{"ts":1365110372090,"patch":[[{"diffs":[[0,"x,String"],[1," "],[0,") throws"]],"start1":6255,"start2":6255,"length1":16,"length2":17}]],"length":8371,"saved":false}
{"ts":1365110373766,"patch":[[{"diffs":[[0,",String "],[1,"res"],[0,") throws"]],"start1":6256,"start2":6256,"length1":16,"length2":19}]],"length":8374,"saved":false}
{"ts":1365110377914,"patch":[[{"diffs":[[0,"ring res"],[1,"po"],[0,") throws"]],"start1":6259,"start2":6259,"length1":16,"length2":18}]],"length":8376,"saved":false}
{"ts":1365110380999,"patch":[[{"diffs":[[0,"ng respo"],[1,"se"],[0,") throws"]],"start1":6261,"start2":6261,"length1":16,"length2":18}]],"length":8378,"saved":false}
{"ts":1365110383988,"patch":[[{"diffs":[[0," respose"],[1,"Body"],[0,") throws"]],"start1":6263,"start2":6263,"length1":16,"length2":20}]],"length":8382,"saved":false}
{"ts":1365110430932,"patch":[[{"diffs":[[0,"    "],[-1,"void incrementAll(String[] new_cats,String[] new_statii,int x,String resposeBody) throws InvalidSchemaException,DatastoreException {\n        DataService dataService = serviceProvider.getDataService();   // get the StackMob datastore service and assemble the query\n \t\tif(new_cats!=null&&new_cats.length>0){\n \t\t\t//update cat\n            for(int i=0;i<new_cats.length;i++){\n                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                update.add(new SMIncrement(\"count\", x));\n                SMObject incrementResult = dataService.updateObject(\"category\",new_cats[i], update); // todo schema with todo_id = todo1\n                responseBody = incrementResult.toString();\n            }\n \t\t}\n        if(new_statii!=null&&new_statii.length>0){\n \t\t\t//update statii\n            for(int i=0;i<new_statii.length;i++){\n                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                update.add(new SMIncrement(\"count\", x));\n                SMObject incrementResult = dataService.updateObject(\"category\",new_statii[i], update); // todo schema with todo_id = todo1\n                responseBody = incrementResult.toString();\n            }\n \t\t}\n    }"],[0,"\n   "]],"start1":6191,"start2":6191,"length1":1185,"length2":8}]],"length":7205,"saved":false}
{"ts":1365110441518,"patch":[[{"diffs":[[0,"    }};\n  }\n"],[1,"  \n  \n"],[0," \n  @Overrid"]],"start1":1065,"start2":1065,"length1":24,"length2":30}]],"length":7211,"saved":false}
{"ts":1365110443129,"patch":[[{"diffs":[[0," }\n  \n  "],[1,"void incrementAll(String[] new_cats,String[] new_statii,int x,String resposeBody) throws InvalidSchemaException,DatastoreException {\n        DataService dataService = serviceProvider.getDataService();   // get the StackMob datastore service and assemble the query\n     \tif(new_cats!=null&&new_cats.length>0){\n \t\t\t//update cat\n            for(int i=0;i<new_cats.length;i++){\n                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                update.add(new SMIncrement(\"count\", x));\n                SMObject incrementResult = dataService.updateObject(\"category\",new_cats[i], update); // todo schema with todo_id = todo1\n                responseBody = incrementResult.toString();\n            }\n \t\t}\n        if(new_statii!=null&&new_statii.length>0){\n \t\t\t//update statii\n            for(int i=0;i<new_statii.length;i++){\n                List<SMUpdate> update = new ArrayList<SMUpdate>();\n                update.add(new SMIncrement(\"count\", x));\n                SMObject incrementResult = dataService.updateObject(\"category\",new_statii[i], update); // todo schema with todo_id = todo1\n                responseBody = incrementResult.toString();\n            }\n \t\t}\n    }"],[0,"\n \n  @Ov"]],"start1":1074,"start2":1074,"length1":16,"length2":1196}]],"length":8391,"saved":false}
{"ts":1365110468827,"patch":[[{"diffs":[[0,"entAll(1"],[1,",re"],[0,");\n \t\t\t "]],"start1":4549,"start2":4549,"length1":16,"length2":19}]],"length":8394,"saved":false}
{"ts":1365110470840,"patch":[[{"diffs":[[0,"All(1,re"],[1,"spo"],[0,");\n \t\t\t "]],"start1":4552,"start2":4552,"length1":16,"length2":19}]],"length":8397,"saved":false}
{"ts":1365110473143,"patch":[[{"diffs":[[0,"(1,respo"],[1,"se"],[0,");\n \t\t\t "]],"start1":4555,"start2":4555,"length1":16,"length2":18}]],"length":8399,"saved":false}
{"ts":1365110476590,"patch":[[{"diffs":[[0,"(1,respo"],[1,"n"],[0,"se);\n \t\t"]],"start1":4555,"start2":4555,"length1":16,"length2":17}]],"length":8400,"saved":false}
{"ts":1365110479644,"patch":[[{"diffs":[[0,"response"],[1,"Body"],[0,");\n \t\t\t "]],"start1":4558,"start2":4558,"length1":16,"length2":20}]],"length":8404,"saved":false}
{"ts":1365110484705,"patch":[[{"diffs":[[0,"mentAll("],[1,"new"],[0,"1,respon"]],"start1":4548,"start2":4548,"length1":16,"length2":19}]],"length":8407,"saved":false}
{"ts":1365110487159,"patch":[[{"diffs":[[0,"tAll(new"],[1,"_"],[0,"1,respon"]],"start1":4551,"start2":4551,"length1":16,"length2":17}]],"length":8408,"saved":false}
{"ts":1365110489257,"patch":[[{"diffs":[[0,"All(new_"],[1,"cats"],[0,"1,respon"]],"start1":4552,"start2":4552,"length1":16,"length2":20}]],"length":8412,"saved":false}
{"ts":1365110497775,"patch":[[{"diffs":[[0,"new_cats"],[1,","],[0,"1,respon"]],"start1":4556,"start2":4556,"length1":16,"length2":17}]],"length":8413,"saved":false}
{"ts":1365110501330,"patch":[[{"diffs":[[0,"ew_cats,"],[1,","],[0,"1,respon"]],"start1":4557,"start2":4557,"length1":16,"length2":17}]],"length":8414,"saved":false}
{"ts":1365110504364,"patch":[[{"diffs":[[0,"ew_cats,"],[1,"nul"],[0,",1,respo"]],"start1":4557,"start2":4557,"length1":16,"length2":19}]],"length":8417,"saved":false}
{"ts":1365110508595,"patch":[[{"diffs":[[0,"ew_cats,"],[-1,"nul"],[0,",1,respo"]],"start1":4557,"start2":4557,"length1":19,"length2":16}]],"length":8414,"saved":false}
{"ts":1365110509904,"patch":[[{"diffs":[[0,"ew_cats,"],[1,"new"],[0,",1,respo"]],"start1":4557,"start2":4557,"length1":16,"length2":19}]],"length":8417,"saved":false}
{"ts":1365110513000,"patch":[[{"diffs":[[0,"cats,new"],[1,"_st"],[0,",1,respo"]],"start1":4560,"start2":4560,"length1":16,"length2":19}]],"length":8420,"saved":false}
{"ts":1365110514332,"patch":[[{"diffs":[[0,"s,new_st"],[1,"atii"],[0,",1,respo"]],"start1":4563,"start2":4563,"length1":16,"length2":20}]],"length":8424,"saved":false}
{"ts":1365110531370,"patch":[[{"diffs":[[0,"ng respo"],[1,"n"],[0,"seBody) "]],"start1":1148,"start2":1148,"length1":16,"length2":17}]],"length":8425,"saved":false}
{"ts":1365110550698,"patch":[[{"diffs":[[0,"mentAll("],[1,"new"],[0,"-1);\n   "]],"start1":6019,"start2":6019,"length1":16,"length2":19}]],"length":8428,"saved":false}
{"ts":1365110553259,"patch":[[{"diffs":[[0,"tAll(new"],[1,"_"],[0,"-1);\n   "]],"start1":6022,"start2":6022,"length1":16,"length2":17}]],"length":8429,"saved":false}
{"ts":1365110555244,"patch":[[{"diffs":[[0,"All(new_"],[1,"cats"],[0,"-1);\n   "]],"start1":6023,"start2":6023,"length1":16,"length2":20}]],"length":8433,"saved":false}
{"ts":1365110557179,"patch":[[{"diffs":[[0,"new_cats"],[1,","],[0,"-1);\n   "]],"start1":6027,"start2":6027,"length1":16,"length2":17}]],"length":8434,"saved":false}
{"ts":1365110558994,"patch":[[{"diffs":[[0,"ew_cats,"],[1,"new"],[0,"-1);\n   "]],"start1":6028,"start2":6028,"length1":16,"length2":19}]],"length":8437,"saved":false}
{"ts":1365110560686,"patch":[[{"diffs":[[0,"cats,new"],[1,"_"],[0,"-1);\n   "]],"start1":6031,"start2":6031,"length1":16,"length2":17}]],"length":8438,"saved":false}
{"ts":1365110563199,"patch":[[{"diffs":[[0,"ats,new_"],[1,"statii"],[0,"-1);\n   "]],"start1":6032,"start2":6032,"length1":16,"length2":22}]],"length":8444,"saved":false}
{"ts":1365110564592,"patch":[[{"diffs":[[0,"w_statii"],[1,","],[0,"-1);\n   "]],"start1":6038,"start2":6038,"length1":16,"length2":17}]],"length":8445,"saved":false}
{"ts":1365110566789,"patch":[[{"diffs":[[0,"tatii,-1"],[1,","],[0,");\n     "]],"start1":6041,"start2":6041,"length1":16,"length2":17}]],"length":8446,"saved":false}
{"ts":1365110569361,"patch":[[{"diffs":[[0,"atii,-1,"],[1,"res"],[0,");\n     "]],"start1":6042,"start2":6042,"length1":16,"length2":19}]],"length":8449,"saved":false}
{"ts":1365110569908,"patch":[[{"diffs":[[0,"i,-1,res"],[1,"p"],[0,");\n     "]],"start1":6045,"start2":6045,"length1":16,"length2":17}]],"length":8450,"saved":false}
{"ts":1365110571393,"patch":[[{"diffs":[[0,",-1,resp"],[1,"onse"],[0,");\n     "]],"start1":6046,"start2":6046,"length1":16,"length2":20}]],"length":8454,"saved":false}
{"ts":1365110576198,"patch":[[{"diffs":[[0,"response"],[1,"B"],[0,");\n     "]],"start1":6050,"start2":6050,"length1":16,"length2":17}]],"length":8455,"saved":false}
{"ts":1365110577312,"patch":[[{"diffs":[[0,"esponseB"],[1,"ody"],[0,");\n     "]],"start1":6051,"start2":6051,"length1":16,"length2":19}]],"length":8458,"saved":false}
{"ts":1365110717359,"patch":[[{"diffs":[[0,"ory_id\")"],[-1,")"],[0,";\n      "]],"start1":4457,"start2":4457,"length1":17,"length2":16}]],"length":8457,"saved":false}
